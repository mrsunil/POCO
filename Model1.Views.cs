//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Data.Entity.Infrastructure.MappingViews;

[assembly: DbMappingViewCacheTypeAttribute(
    typeof(POCO.ApprovalFlowEntities),
    typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySetsc68b104ccac3d2f6f3c69168200d10540a269d7558d4bec2698693573fdbed79))]

namespace Edm_EntityMappingGeneratedViews
{
    using System;
    using System.CodeDom.Compiler;
    using System.Data.Entity.Core.Metadata.Edm;

    /// <summary>
    /// Implements a mapping view cache.
    /// </summary>
    [GeneratedCode("Entity Framework 6 Power Tools", "0.9.2.0")]
    internal sealed class ViewsForBaseEntitySetsc68b104ccac3d2f6f3c69168200d10540a269d7558d4bec2698693573fdbed79 : DbMappingViewCache
    {
        /// <summary>
        /// Gets a hash value computed over the mapping closure.
        /// </summary>
        public override string MappingHashValue
        {
            get { return "c68b104ccac3d2f6f3c69168200d10540a269d7558d4bec2698693573fdbed79"; }
        }

        /// <summary>
        /// Gets a view corresponding to the specified extent.
        /// </summary>
        /// <param name="extent">The extent.</param>
        /// <returns>The mapping view, or null if the extent is not associated with a mapping view.</returns>
        public override DbMappingView GetView(EntitySetBase extent)
        {
            if (extent == null)
            {
                throw new ArgumentNullException("extent");
            }

            var extentName = extent.EntityContainer.Name + "." + extent.Name;

            if (extentName == "ApprovalFlowModelStoreContainer.ApprovalRules")
            {
                return GetView0();
            }

            if (extentName == "ApprovalFlowEntities.ApprovalRules")
            {
                return GetView1();
            }

            if (extentName == "ApprovalFlowModelStoreContainer.Approve")
            {
                return GetView2();
            }

            if (extentName == "ApprovalFlowModelStoreContainer.ApproveHistory")
            {
                return GetView3();
            }

            if (extentName == "ApprovalFlowModelStoreContainer.Employee")
            {
                return GetView4();
            }

            if (extentName == "ApprovalFlowModelStoreContainer.ResponsibilityCodeHierarchy")
            {
                return GetView5();
            }

            if (extentName == "ApprovalFlowModelStoreContainer.SecurityContact")
            {
                return GetView6();
            }

            if (extentName == "ApprovalFlowModelStoreContainer.SecurityContactResponsibilityCode")
            {
                return GetView7();
            }

            if (extentName == "ApprovalFlowEntities.Approves")
            {
                return GetView8();
            }

            if (extentName == "ApprovalFlowEntities.ApproveHistories")
            {
                return GetView9();
            }

            if (extentName == "ApprovalFlowEntities.Employees")
            {
                return GetView10();
            }

            if (extentName == "ApprovalFlowEntities.ResponsibilityCodeHierarchies")
            {
                return GetView11();
            }

            if (extentName == "ApprovalFlowEntities.SecurityContacts")
            {
                return GetView12();
            }

            if (extentName == "ApprovalFlowEntities.SecurityContactResponsibilityCodes")
            {
                return GetView13();
            }

            if (extentName == "ApprovalFlowModelStoreContainer.Employees")
            {
                return GetView14();
            }

            if (extentName == "ApprovalFlowEntities.Employees1")
            {
                return GetView15();
            }

            return null;
        }

        /// <summary>
        /// Gets the view for ApprovalFlowModelStoreContainer.ApprovalRules.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView0()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ApprovalRules
        [ApprovalFlowModel.Store.ApprovalRules](T1.ApprovalRules_ApprovalRuleId, T1.ApprovalRules_HierarchyId)
    FROM (
        SELECT 
            T.ApprovalRuleId AS ApprovalRules_ApprovalRuleId, 
            T.HierarchyId AS ApprovalRules_HierarchyId, 
            True AS _from0
        FROM ApprovalFlowEntities.ApprovalRules AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ApprovalFlowEntities.ApprovalRules.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView1()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ApprovalRules
        [ApprovalFlowModel.ApprovalRule](T1.ApprovalRule_ApprovalRuleId, T1.ApprovalRule_HierarchyId)
    FROM (
        SELECT 
            T.ApprovalRuleId AS ApprovalRule_ApprovalRuleId, 
            T.HierarchyId AS ApprovalRule_HierarchyId, 
            True AS _from0
        FROM ApprovalFlowModelStoreContainer.ApprovalRules AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ApprovalFlowModelStoreContainer.Approve.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView2()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Approve
        [ApprovalFlowModel.Store.Approve](T1.Approve_ApproveId, T1.Approve_HierarchyId, T1.Approve_Dfr, T1.Approve_Lcfo, T1.Approve_IsEffective, T1.Approve_EfffectiveDate, T1.Approve_ExpirationDate, T1.Approve_CreatedBy, T1.Approve_CreatedDate, T1.Approve_UpdatedBy, T1.Approve_UpdatedDate, T1.Approve_IsActive)
    FROM (
        SELECT 
            T.ApproveId AS Approve_ApproveId, 
            T.HierarchyId AS Approve_HierarchyId, 
            T.Dfr AS Approve_Dfr, 
            T.Lcfo AS Approve_Lcfo, 
            T.IsEffective AS Approve_IsEffective, 
            T.EfffectiveDate AS Approve_EfffectiveDate, 
            T.ExpirationDate AS Approve_ExpirationDate, 
            T.CreatedBy AS Approve_CreatedBy, 
            T.CreatedDate AS Approve_CreatedDate, 
            T.UpdatedBy AS Approve_UpdatedBy, 
            T.UpdatedDate AS Approve_UpdatedDate, 
            T.IsActive AS Approve_IsActive, 
            True AS _from0
        FROM ApprovalFlowEntities.Approves AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ApprovalFlowModelStoreContainer.ApproveHistory.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView3()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ApproveHistory
        [ApprovalFlowModel.Store.ApproveHistory](T1.ApproveHistory_ApproveHistoryId, T1.ApproveHistory_ApproveId, T1.ApproveHistory_PreviousDfr, T1.ApproveHistory_PreviousLcfo, T1.ApproveHistory_CreatedBy, T1.ApproveHistory_CreatedDate)
    FROM (
        SELECT 
            T.ApproveHistoryId AS ApproveHistory_ApproveHistoryId, 
            T.ApproveId AS ApproveHistory_ApproveId, 
            T.PreviousDfr AS ApproveHistory_PreviousDfr, 
            T.PreviousLcfo AS ApproveHistory_PreviousLcfo, 
            T.CreatedBy AS ApproveHistory_CreatedBy, 
            T.CreatedDate AS ApproveHistory_CreatedDate, 
            True AS _from0
        FROM ApprovalFlowEntities.ApproveHistories AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ApprovalFlowModelStoreContainer.Employee.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView4()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Employee
        [ApprovalFlowModel.Store.Employee](T1.Employee_EmployeeId, T1.Employee_nTic, T1.Employee_Name, T1.Employee_EmailId, T1.Employee_Division, T1.Employee_IsDFR, T1.Employee_IsLCFO, T1.Employee_IsActive)
    FROM (
        SELECT 
            T.EmployeeId AS Employee_EmployeeId, 
            T.nTic AS Employee_nTic, 
            T.Name AS Employee_Name, 
            T.EmailId AS Employee_EmailId, 
            T.Division AS Employee_Division, 
            T.IsDFR AS Employee_IsDFR, 
            T.IsLCFO AS Employee_IsLCFO, 
            T.IsActive AS Employee_IsActive, 
            True AS _from0
        FROM ApprovalFlowEntities.Employees AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ApprovalFlowModelStoreContainer.ResponsibilityCodeHierarchy.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView5()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ResponsibilityCodeHierarchy
        [ApprovalFlowModel.Store.ResponsibilityCodeHierarchy](T1.ResponsibilityCodeHierarchy_HierarchyId, T1.ResponsibilityCodeHierarchy_ResponsibilityCode, T1.ResponsibilityCodeHierarchy_ParentCode, T1.ResponsibilityCodeHierarchy_CreatedBy, T1.ResponsibilityCodeHierarchy_CreatedDate, T1.ResponsibilityCodeHierarchy_UpdatedBy, T1.ResponsibilityCodeHierarchy_UpdatedDate, T1.ResponsibilityCodeHierarchy_IsActive)
    FROM (
        SELECT 
            T.HierarchyId AS ResponsibilityCodeHierarchy_HierarchyId, 
            T.ResponsibilityCode AS ResponsibilityCodeHierarchy_ResponsibilityCode, 
            T.ParentCode AS ResponsibilityCodeHierarchy_ParentCode, 
            T.CreatedBy AS ResponsibilityCodeHierarchy_CreatedBy, 
            T.CreatedDate AS ResponsibilityCodeHierarchy_CreatedDate, 
            T.UpdatedBy AS ResponsibilityCodeHierarchy_UpdatedBy, 
            T.UpdatedDate AS ResponsibilityCodeHierarchy_UpdatedDate, 
            T.IsActive AS ResponsibilityCodeHierarchy_IsActive, 
            True AS _from0
        FROM ApprovalFlowEntities.ResponsibilityCodeHierarchies AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ApprovalFlowModelStoreContainer.SecurityContact.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView6()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing SecurityContact
        [ApprovalFlowModel.Store.SecurityContact](T1.SecurityContact_SecurityContactId, T1.SecurityContact_nTic, T1.SecurityContact_Name, T1.SecurityContact_EmailId, T1.SecurityContact_Division, T1.SecurityContact_Department, T1.SecurityContact_IsActive)
    FROM (
        SELECT 
            T.SecurityContactId AS SecurityContact_SecurityContactId, 
            T.nTic AS SecurityContact_nTic, 
            T.Name AS SecurityContact_Name, 
            T.EmailId AS SecurityContact_EmailId, 
            T.Division AS SecurityContact_Division, 
            T.Department AS SecurityContact_Department, 
            T.IsActive AS SecurityContact_IsActive, 
            True AS _from0
        FROM ApprovalFlowEntities.SecurityContacts AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ApprovalFlowModelStoreContainer.SecurityContactResponsibilityCode.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView7()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing SecurityContactResponsibilityCode
        [ApprovalFlowModel.Store.SecurityContactResponsibilityCode](T1.SecurityContactResponsibilityCode_SecurityContactResponsibilityCodeId, T1.SecurityContactResponsibilityCode_SecurityContactId, T1.SecurityContactResponsibilityCode_HierarchyId)
    FROM (
        SELECT 
            T.SecurityContactResponsibilityCodeId AS SecurityContactResponsibilityCode_SecurityContactResponsibilityCodeId, 
            T.SecurityContactId AS SecurityContactResponsibilityCode_SecurityContactId, 
            T.HierarchyId AS SecurityContactResponsibilityCode_HierarchyId, 
            True AS _from0
        FROM ApprovalFlowEntities.SecurityContactResponsibilityCodes AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ApprovalFlowEntities.Approves.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView8()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Approves
        [ApprovalFlowModel.Approve](T1.Approve_ApproveId, T1.Approve_HierarchyId, T1.Approve_Dfr, T1.Approve_Lcfo, T1.Approve_IsEffective, T1.Approve_EfffectiveDate, T1.Approve_ExpirationDate, T1.Approve_CreatedBy, T1.Approve_CreatedDate, T1.Approve_UpdatedBy, T1.Approve_UpdatedDate, T1.Approve_IsActive)
    FROM (
        SELECT 
            T.ApproveId AS Approve_ApproveId, 
            T.HierarchyId AS Approve_HierarchyId, 
            T.Dfr AS Approve_Dfr, 
            T.Lcfo AS Approve_Lcfo, 
            T.IsEffective AS Approve_IsEffective, 
            T.EfffectiveDate AS Approve_EfffectiveDate, 
            T.ExpirationDate AS Approve_ExpirationDate, 
            T.CreatedBy AS Approve_CreatedBy, 
            T.CreatedDate AS Approve_CreatedDate, 
            T.UpdatedBy AS Approve_UpdatedBy, 
            T.UpdatedDate AS Approve_UpdatedDate, 
            T.IsActive AS Approve_IsActive, 
            True AS _from0
        FROM ApprovalFlowModelStoreContainer.Approve AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ApprovalFlowEntities.ApproveHistories.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView9()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ApproveHistories
        [ApprovalFlowModel.ApproveHistory](T1.ApproveHistory_ApproveHistoryId, T1.ApproveHistory_ApproveId, T1.ApproveHistory_PreviousDfr, T1.ApproveHistory_PreviousLcfo, T1.ApproveHistory_CreatedBy, T1.ApproveHistory_CreatedDate)
    FROM (
        SELECT 
            T.ApproveHistoryId AS ApproveHistory_ApproveHistoryId, 
            T.ApproveId AS ApproveHistory_ApproveId, 
            T.PreviousDfr AS ApproveHistory_PreviousDfr, 
            T.PreviousLcfo AS ApproveHistory_PreviousLcfo, 
            T.CreatedBy AS ApproveHistory_CreatedBy, 
            T.CreatedDate AS ApproveHistory_CreatedDate, 
            True AS _from0
        FROM ApprovalFlowModelStoreContainer.ApproveHistory AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ApprovalFlowEntities.Employees.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView10()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Employees
        [ApprovalFlowModel.Employee](T1.Employee_EmployeeId, T1.Employee_nTic, T1.Employee_Name, T1.Employee_EmailId, T1.Employee_Division, T1.Employee_IsDFR, T1.Employee_IsLCFO, T1.Employee_IsActive)
    FROM (
        SELECT 
            T.EmployeeId AS Employee_EmployeeId, 
            T.nTic AS Employee_nTic, 
            T.Name AS Employee_Name, 
            T.EmailId AS Employee_EmailId, 
            T.Division AS Employee_Division, 
            T.IsDFR AS Employee_IsDFR, 
            T.IsLCFO AS Employee_IsLCFO, 
            T.IsActive AS Employee_IsActive, 
            True AS _from0
        FROM ApprovalFlowModelStoreContainer.Employee AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ApprovalFlowEntities.ResponsibilityCodeHierarchies.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView11()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ResponsibilityCodeHierarchies
        [ApprovalFlowModel.ResponsibilityCodeHierarchy](T1.ResponsibilityCodeHierarchy_HierarchyId, T1.ResponsibilityCodeHierarchy_ResponsibilityCode, T1.ResponsibilityCodeHierarchy_ParentCode, T1.ResponsibilityCodeHierarchy_CreatedBy, T1.ResponsibilityCodeHierarchy_CreatedDate, T1.ResponsibilityCodeHierarchy_UpdatedBy, T1.ResponsibilityCodeHierarchy_UpdatedDate, T1.ResponsibilityCodeHierarchy_IsActive)
    FROM (
        SELECT 
            T.HierarchyId AS ResponsibilityCodeHierarchy_HierarchyId, 
            T.ResponsibilityCode AS ResponsibilityCodeHierarchy_ResponsibilityCode, 
            T.ParentCode AS ResponsibilityCodeHierarchy_ParentCode, 
            T.CreatedBy AS ResponsibilityCodeHierarchy_CreatedBy, 
            T.CreatedDate AS ResponsibilityCodeHierarchy_CreatedDate, 
            T.UpdatedBy AS ResponsibilityCodeHierarchy_UpdatedBy, 
            T.UpdatedDate AS ResponsibilityCodeHierarchy_UpdatedDate, 
            T.IsActive AS ResponsibilityCodeHierarchy_IsActive, 
            True AS _from0
        FROM ApprovalFlowModelStoreContainer.ResponsibilityCodeHierarchy AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ApprovalFlowEntities.SecurityContacts.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView12()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing SecurityContacts
        [ApprovalFlowModel.SecurityContact](T1.SecurityContact_SecurityContactId, T1.SecurityContact_nTic, T1.SecurityContact_Name, T1.SecurityContact_EmailId, T1.SecurityContact_Division, T1.SecurityContact_Department, T1.SecurityContact_IsActive)
    FROM (
        SELECT 
            T.SecurityContactId AS SecurityContact_SecurityContactId, 
            T.nTic AS SecurityContact_nTic, 
            T.Name AS SecurityContact_Name, 
            T.EmailId AS SecurityContact_EmailId, 
            T.Division AS SecurityContact_Division, 
            T.Department AS SecurityContact_Department, 
            T.IsActive AS SecurityContact_IsActive, 
            True AS _from0
        FROM ApprovalFlowModelStoreContainer.SecurityContact AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ApprovalFlowEntities.SecurityContactResponsibilityCodes.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView13()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing SecurityContactResponsibilityCodes
        [ApprovalFlowModel.SecurityContactResponsibilityCode](T1.SecurityContactResponsibilityCode_SecurityContactResponsibilityCodeId, T1.SecurityContactResponsibilityCode_SecurityContactId, T1.SecurityContactResponsibilityCode_HierarchyId)
    FROM (
        SELECT 
            T.SecurityContactResponsibilityCodeId AS SecurityContactResponsibilityCode_SecurityContactResponsibilityCodeId, 
            T.SecurityContactId AS SecurityContactResponsibilityCode_SecurityContactId, 
            T.HierarchyId AS SecurityContactResponsibilityCode_HierarchyId, 
            True AS _from0
        FROM ApprovalFlowModelStoreContainer.SecurityContactResponsibilityCode AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ApprovalFlowModelStoreContainer.Employees.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView14()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Employees
        [ApprovalFlowModel.Store.Employees](T1.Employees_EmployeeId, T1.Employees_Ntic)
    FROM (
        SELECT 
            T.EmployeeId AS Employees_EmployeeId, 
            T.Ntic AS Employees_Ntic, 
            True AS _from0
        FROM ApprovalFlowEntities.Employees1 AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ApprovalFlowEntities.Employees1.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView15()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Employees1
        [ApprovalFlowModel.Employee1](T1.Employee1_EmployeeId, T1.Employee1_Ntic)
    FROM (
        SELECT 
            T.EmployeeId AS Employee1_EmployeeId, 
            T.Ntic AS Employee1_Ntic, 
            True AS _from0
        FROM ApprovalFlowModelStoreContainer.Employees AS T
    ) AS T1");
        }
    }
}
